[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "quam"
version = "0.3.10"
#dynamic = ["version"]
description = "Quantum Abstract Machine (QuAM) facilitates development of abstraction layers in experiments."
authors = [
    { name = "Serwan Asaad", email = "serwan.asaad@quantum-machines.co" },
]
license = { text = "BSD-3-Clause" }
requires-python = ">=3.9,<3.13"
readme = "README.md"

classifiers = [
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Information Technology",
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: BSD License",
]

keywords = [
    "quantum-computing",
    "experiment-control",
    "quantum-infrastructure",
    "abstraction-layer",
    "abstraction-library",
]

dependencies = [
    "numpy >= 1.21.2",
    "qm-qua >=1.1.0",
    "qualang-tools >= 0.15.0",
    "typeguard >= 4.1.0",
    "pydantic >= 2.10.5"
]

[project.urls]
Homepage = "https://github.com/qua-platform/quam"

[project.optional-dependencies]
dev = [
    "pytest >= 7.1.2",
    "black >= 23.7.0",
    "flake8 >= 5.0.1",
    "pyproject-flake8 >= 5.0.0",
    "ipykernel >= 6.24.0",
    "pytest-cov >= 4.1.0",
    "pytest-mock >= 3.6.1",
]
docs = ["mkdocstrings[python]>=0.18", "mkdocs-gen-files", "mkdocs-jupyter"]
build = ["setuptools >= 71", "setuptools-scm >= 8.1.0", "build >= 1.2.1"]

[tool.black]
target-version = ["py39"]
line-length = 88
preview = true

[tool.flake8]
max-line-length = 88

[tool.setuptools]
packages = ["quam"]

[tool.setuptools_scm]
version_scheme = "only-version"
local_scheme = "no-local-version"


# Previous quam settings

### Extra required dependencies
# "jsonschema = ^4.14.0",
# "pydantic = ^1.9.2",
# "rich = ^12.5.1",
# "rich-click = ^1.6.1",
# "pyyaml = ^6.0",

### Extra optional dependencies
# flake8-bugbear = "^22.4.25"
# poethepoet = "^0.10.0"
# typing-extensions = "^4.3.0"
# coverage = "^6.4.4"


# [tool.poe.tasks.check-format]
# cmd = "black . --check --line-length 80"
# help = "Format source files according to the style rules"

# [tool.poe.tasks.format]
# cmd = "black . --line-length 80"
# help = "Format source files according to the style rules"

# [tool.poe.tasks.lint]
# cmd = "flake8 ."
# help = "Check for lint errors"

# [tool.poe.tasks.test]
# cmd = "pytest"
# help = "Run all unit tests"

# [tool.poe.tasks.check]
# sequence = ["check-format", "lint", "test"]
# help = "Run format and all checks on the code"
